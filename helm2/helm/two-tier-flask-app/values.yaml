replicaCount: 3

image:
  repository: andherson1039/two-tier-flask-app
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 5000

configMap:
  MYSQL_HOST: "{{ .Release.Name }}-db-router"
  MYSQL_DB: myDB

secret:
  MYSQL_USER: admin
  MYSQL_PASSWORD: admin

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

pdb:
  enabled: true
  minAvailable: 1

mysqlCluster:
  tlsUseSelfSigned: false
  enabled: true
  instances: 1
  routerInstances: 1
  database: myDB
  rootPassword: root
  user: admin
  password: admin
  rootHost: "%"
  initSQL: |
    CREATE TABLE messages (
      id INT AUTO_INCREMENT PRIMARY KEY,
      message TEXT
    )
  storage:
    capacity: 1Gi
    storageClassName: local-path
    hostPath: /root/storage

nodeSelector: {}
tolerations: []
affinity: {}
